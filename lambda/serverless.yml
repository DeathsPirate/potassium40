
service: potassium40

custom:
  aws_region: ap-southeast-1
  bucketName: p40.123456

resources:
  Resources:
    p40Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        AccessControl: Private

provider:
  name: aws
  runtime: python3.7
  logRetentionDays: 1
  stage: functions
  region: ${self:custom.aws_region}
  iamRoleStatements:
  # Bucket Permissions
  - Effect: Allow
    Action:
    - s3:ListBucket
    Resource:
      Fn::Join:
        - ""
        - - "arn:aws:s3:::"
          - ${self:custom.bucketName}
  # Bucket **Objects** Permissions
  - Effect: Allow
    Action:
    - s3:PutObject
    - s3:GetObject
    - s3:DeleteObject
    - s3:PutObjectAcl
    - s3:GetObjectAcl  # ACL permissions required for file_upload
    - s3:AbortMultipartUpload
    Resource:
      Fn::Join:
        - ""
        - - "arn:aws:s3:::"
          - ${self:custom.bucketName}
          - "/*"
  - Effect: Allow
    Action:
    - lambda:InvokeFunction
    Resource: "*" # no choice for now will see how to resolve circular dependency issue later
  environment:
    bucket_name: ${self:custom.bucketName}

package:
  exclude:
    - venv/**
    - .gitignore
    - node_modules/**
    - package.json
    - package-lock.json
    - layers/**

layers:
  ciscoumbrella:
    package:
      artifact: layers/random_top-1m.csv.zip  # Cisco Umbrella top 1 million (randomized)
  majestic:
    package:
      artifact: layers/random_majestic_million.csv.zip  # Majestic 1 million (randomized)


functions:
  get_robots:
    handler: get_robots.get_robots
    memorySize: 1280
    timeout: 100
    description: Use Lambda functions to get robots.txt file from Cisco Umbrella 1 million
    layers:
      - {Ref: CiscoumbrellaLambdaLayer}  # uses CloudFormation reference format
      - {Ref: MajesticLambdaLayer}  # uses CloudFormation reference format
      - Fn::Join:
        - ""
        - - "arn:aws:lambda:"
          - ${opt:region, self:provider.region}
          - ":113088814899:layer:"
          - "Klayers-python37-requests:1"  # layer_name:version
  compress_bucket:
    handler: compress_bucket.compress_bucket
    memorySize: 3008
    timeout: 600
    description: Compress all files in S3 bucket into 1 single zip file
  clear_bucket:
    handler: clear_bucket.clear_bucket
    memorySize: 128
    timeout: 600
    description: Delete all items from bucket
  invoke_lambdas:
    handler: invoke_lambdas.invoke_lambdas
    memorySize: 128
    timeout: 120
    description: Invoke lambdas on behalf, faster invocations

